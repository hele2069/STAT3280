labs(x="Year",y = "Temp") +theme(legend.position = "right")
ggplot(chic, aes(x=date,y=temp, color = year)) + geom_point()+
labs(x="Year",y = "Temp") +theme(legend.position = "top")
ggplot(chic, aes(x=date,y=temp, color = year)) + geom_point()+
labs(x="Year",y = "Temp") +theme(legend.title = element_blank())
ggplot(chic, aes(x=date,y=temp, color = year)) + geom_point()+
labs(x="Year",y = "Temp",color="My Year:")
ggplot(chic, aes(x=date,y=temp, color = factor(dow))) + geom_point()+
labs(x="Year",y = "Temp")
ggplot(chic, aes(x=date,y=temp, color = factor(dow))) + geom_point()+
labs(x="Year",y = "Temp", color="Day of Week")
ggplot(chic, aes(x=date,y=temp, color = factor(dow))) + geom_point()+
labs(x="Year",y = "Temp", color="Day of Week") +
theme(legend.title=element_text(color="chocolate",size=12, face="bold"))
season <- rep("Winter",nrow(chic))
season
season[chic$month <= 9] <-"Fall"
season[chic$month <= 6] <-"Summer"
season[chic$month <= 3] <-"Spring"
chic$season <- season
head(chic)
tail(chic)
ggplot(chic, aes(x=date,y=temp,color= factor(season))) + geom_point() +
labs(x="Year", y=expression(paste("Temperature (", degree ~ F, ")")), color="Season")+
theme(legend.title=element_text(color="chocolate",size=12, face="bold"))
ggplot(chic, aes(x=date,y=temp,color= factor(season))) + geom_point() +
labs(x="Year", y=expression(paste("Temperature (", degree ~ F, ")")), color="Season")+
theme(legend.title=element_text(color="chocolate",size=12, face="bold")) +
scale_color_discrete(labels=c("Jan-Mar","Apr-Jun", "Jul-Sep","Oct-Dec"))
ggplot(chic, aes(x=date,y=temp,color= factor(season))) + geom_point() +
labs(x="Year", y=expression(paste("Temperature (", degree ~ F, ")")), color="Season")+
theme(legend.title=element_text(color="chocolate",size=12, face="bold"))
ggplot(chic, aes(x=date,y=temp,color= factor(season))) + geom_point() +
labs(x="Year", y=expression(paste("Temperature (", degree ~ F, ")")), color="Season")+
theme(legend.title=element_text(color="chocolate",size=12, face="bold")) +
scale_color_discrete(labels=c("Jul-Sep","Jan-Mar","Apr-Jun", "Oct-Dec"))
season <- rep(4,nrow(chic))
season[chic$month <= 9] <-3
season[chic$month <= 6] <-2
season[chic$month <= 3] <-1
chic$season <- season
ggplot(chic, aes(x=date,y=temp,color= factor(season))) + geom_point() +
labs(x="Year", y=expression(paste("Temperature (", degree ~ F, ")")), color="Season")+
theme(legend.title=element_text(color="chocolate",size=12, face="bold"))
ggplot(chic, aes(x=date,y=temp,color= factor(season))) + geom_point() +
labs(x="Year", y=expression(paste("Temperature (", degree ~ F, ")")), color="Season")+
theme(legend.title=element_text(color="chocolate",size=12, face="bold")) +
scale_color_discrete(labels=c("Jan-Mar","Apr-Jun","Jul-Sep","Oct-Dec"))
ggplot(chic, aes(x=date,y=temp,color= factor(season))) + geom_point() +
labs(x="Year", y=expression(paste("Temperature (", degree ~ F, ")")), color="Period")+
theme(legend.title=element_text(color="chocolate",size=12, face="bold")) +
scale_color_discrete(labels=c("Jan-Mar","Apr-Jun","Jul-Sep","Oct-Dec"))
ggplot(chic, aes(x=date,y=temp,color= factor(season))) + geom_point() +
labs(x="Year", y=expression(paste("Temperature (", degree ~ F, ")")), color="Period")+
theme(legend.title=element_text(color="chocolate",size=12, face="bold")) +
scale_color_discrete("Whatever legend title",labels=c("Jan-Mar","Apr-Jun","Jul-Sep","Oct-Dec")) +
theme(legend.title = element_text(color="chocolate", size=10,face="bold"
))
ggplot(chic, aes(x=date, y=o3)) + geom_point()
ggplot(chic, aes(x=date, y=o3)) + geom_line(color="grey") + labs(x="Year",y="Ozone")
ggplot(chic, aes(x=date, y=o3)) + geom_line(color="grey") + labs(x="Year",y="Ozone")
+ geom_point(color="darkorange2")
ggplot(chic, aes(x=date, y=o3)) + geom_line(color="grey") + labs(x="Year",y="Ozone")  + geom_point(color="darkorange2")
ggplot(chic[1:20,], aes(x=date, y=o3)) + geom_line(color="grey") + labs(x="Year",y="Ozone")  + geom_point(color="darkorange2")
ggplot(chic[1:20,], aes(x=date, y=o3)) + geom_step(color="grey") + labs(x="Year",y="Ozone")  + geom_point(color="darkorange2")
ggplot(chic[1:20,], aes(x=date, y=o3)) + geom_line(color="grey") + labs(x="Year",y="Ozone")  + geom_point(color="darkorange2")
ggplot(chic, aes(x=date, y=o3))
+ geom_line(color="grey") +
geom_point(color="darkorange2") +
labs(x="Year",y="Ozone")
ggplot(chic, aes(x=date, y=o3)) +
geom_line(color="grey") +
geom_point(color="darkorange2") +
labs(x="Year",y="Ozone")
ggplot(chic, aes(x=date, y=o3)) +
geom_line(aes(color="grey")) +
geom_point(aes(color="darkorange2")) +
labs(x="Year",y="Ozone")
ggplot(chic, aes(x=date, y=o3)) +
geom_line(color="grey") +
geom_point(color="darkorange2") +
labs(x="Year",y="Ozone")
ggplot(chic, aes(x=date, y=o3)) +
geom_line(aes(color="grey")) +
geom_point(aes(color="darkorange2")) +
labs(x="Year",y="Ozone")
ggplot(chic, aes(x=date, y=o3)) +
geom_line(aes(color="point")) +
geom_point(aes(color="line")) +
labs(x="Year",y="Ozone")
ggplot(chic, aes(x=date, y=o3)) +
geom_line(aes(color="line")) +
geom_point(aes(color="point")) +
labs(x="Year",y="Ozone")
ggplot(chic, aes(x=date, y=o3)) +
geom_line(aes(color="line")) +
geom_point(aes(color="point")) +
labs(x="Year",y="Ozone") +
scale_color_dicrete("Type:")
ggplot(chic, aes(x=date, y=o3)) +
geom_line(aes(color="line")) +
geom_point(aes(color="point")) +
labs(x="Year",y="Ozone") +
scale_color_discrete("Type:")
ggplot(chic, aes(x=date, y=o3)) +
geom_line(color="grey") +
geom_point(color="darkorange2") +
labs(x="Year",y="Ozone") +
scale_color_discrete("Type:")
ggplot(chic, aes(x=date, y=o3)) +
geom_line(aes(color="line")) +
geom_point(aes(color="point")) +
labs(x="Year",y="Ozone") +
scale_color_discrete("Type:")
ggplot(chic, aes(x=date, y=o3)) +
geom_line(aes(color="Apple")) +
geom_point(aes(color="Orange")) +
labs(x="Year",y="Ozone") +
scale_color_discrete("Fruit:")
ggplot(chic, aes(x=date, y=o3)) +
geom_line(aes(color="line")) +
geom_point(aes(color="point")) +
labs(x="Year",y="Ozone") +
scale_color_discrete("Type:")
ggplot(chic, aes(x=date, y=o3)) +
geom_line(color="gray",aes(color="line")) +
geom_point(color="darkorange2",aes(color="point")) +
labs(x="Year",y="Ozone") +
scale_color_discrete("Type:")
ggplot(chic, aes(x=date, y=o3)) +
geom_line(color="gray",aes(color="line")) +
geom_point(color="darkorange2",aes(color="point")) +
labs(x="Year",y="Ozone") +
scale_color_manual("Type:", guide="legend", values=c("point"="darkorange2","line" = "grey"))
ggplot(chic, aes(x=date, y=o3)) +
geom_line(aes(color="line")) +
geom_point(aes(color="point")) +
labs(x="Year",y="Ozone") +
scale_color_manual("Type:", guide="legend", values=c("point"="darkorange2","line" = "grey"))
ggplot(chic, aes(x=date, y=o3)) +
geom_line(aes(color="line")) +
geom_point(aes(color="point")) +
labs(x="Year",y="Ozone") +
scale_color_manual("Type:", guide="legend", values=c("point"="darkorange2","line" = "grey"))+
guides(color=guide_legend(override.aes = list(linetype=c(1,NA),shape=c(NA,16))))
ggplot(chic, aes(x=date, y=o3)) +
geom_line(aes(color="line")) +
geom_point(aes(color="point")) +
labs(x="Year",y="Ozone") +
scale_color_manual("Type:", guide="legend", values=c("point"="darkorange2","line" = "grey"))+
guides(color=guide_legend(override.aes = list(linetype=c(3,NA),shape=c(NA,5))))
plot(chic$date,chic$o3,type="p",pch="orange")
plot(chic$date[1:100],chic$o3[1:100],type="p",col="orange",pch=16)
lines(chic$date[1:100],chic$o3[1:100],col="gray")
plot(chic$date[1:100],chic$o3[1:100],type="p",col="orange",pch=16)
lines(chic$date[1:100],chic$o3[1:100],col="gray")
legend("topleft",c("line","point"),pch=c(NA,16),col=c("grey","orange"),lty=c(1,NA))
### ggplot
library(ggplot2)
library(dlnm)
?chicagoNMMAPS
data("chicagoNMMAPS")
chic <- chicagoNMMAPS
dim(chic)
head(chic)
class(chic$date)
summary(chic)
whatis(chic)
g <- ggplot(data=chic,aes(x=date,y=temp))
g
g + geom_point()
g + geom_point(color="firebrick")
g + geom_point(color="green")
theme_set(theme_bw())
g + geom_point(color="firebrick")
g + geom_point(color="firebrick") + labs(x="Year", y="Temp")
g + geom_point(color="firebrick") + labs(x="Year", y=expression(paste("Temperature (", degree ~ F, ")")))
#### for more flexible math formula, use latex.
library(latex2exp)
TeX('$\\alpha^\\beta$')
g + geom_point(color="firebrick") + labs(x=TeX('$\\alpha^\\beta$'), y=TeX('$\\alpha^\\beta$'))
g + geom_point(color="firebrick") + labs(x=TeX('$\\frac{2hc^2}{\\lambda^5}$'), y=TeX('$\\alpha^\\beta$'))
plot(x=1:20, y=chic$temp[1:20], xlab=TeX('$\\frac{2hc^2}{\\lambda^5}$'),ylab=TeX('$\\alpha^\\beta$'))
text(x=5,y=0, lab=TeX('$\\alpha^\\beta$'))
## theme() major one to modify all kinds of theme elements
g + geom_point(color="firebrick") + labs(x="Year", y=expression(paste("Temperature (", degree ~ F, ")")))+
theme(axis.title.x = element_text(color="sienna"), axis.title.y = element_text(color="orangered"))
g + geom_point(color="firebrick") + labs(x="Year", y=expression(paste("Temperature (", degree ~ F, ")")))+
theme(axis.title.x = element_text(color="sienna",size=25), axis.title.y = element_text(color="orangered", size=25))
g + geom_point(color="firebrick") + labs(x="Year", y=expression(paste("Temperature (", degree ~ F, ")")))+
theme(axis.title.x = element_text(color="sienna",size=25,hjust=1), axis.title.y = element_text(color="orangered", size=25,hjust=1))
g + geom_point(color="firebrick") + labs(x="Year", y=expression(paste("Temperature (", degree ~ F, ")")))+
theme(axis.text.x = element_text(angle=45,size=15))
g + geom_point(color="firebrick") + labs(x="Year", y=expression(paste("Temperature (", degree ~ F, ")")))+
theme(axis.text.x = element_text(angle=-45,size=15,vjust=-0.2))
### use theme() to remove unwanted components of the figure
g1 <- g + geom_point(color="firebrick") + labs(x="Year", y=expression(paste("Temperature (", degree ~ F, ")")))
g2 <- g + geom_point(color="firebrick") + labs(x="Year", y=expression(paste("Temperature (", degree ~ F, ")")))+
theme(axis.ticks.y = element_blank(),axis.text.y = element_blank(),axis.title.y=element_blank())
source("MultiGG.R")
multiplot(g1,g2,cols=2)
layoutMatrix <- matrix(c(1,2,3,3),ncol=2,byrow=TRUE)
layoutMatrix
multiplot(g1,g2,g,layout=layoutMatrix)
g + geom_point(color="firebrick") + labs(x="Year", y=expression(paste("Temperature (", degree ~ F, ")")))
g + geom_point(color="firebrick") + labs(x="Year", y=expression(paste("Temperature (", degree ~ F, ")"))) + ylim(c(0,50))
g + geom_point(color="firebrick") + labs(x="Year", y=expression(paste("Temperature (", degree ~ F, ")"))) + scale_y_continuous(limits=c(0,50))
g + geom_point(color="firebrick") + labs(x="Year", y=expression(paste("Temperature (", degree ~ F, ")"))) +
coord_cartesian(ylim=c(0,50))
### title setup
g + geom_point(color="firebrick") + labs(x="Year", y=expression(paste("Temperature (", degree ~ F, ")"))) + ggtitle("Temperatures in Chicago")
g + geom_point(color="firebrick") + labs(x="Year", y=expression(paste("Temperature (", degree ~ F, ")")),title="Temperatures in Chicago")
g + geom_point(color="firebrick") +
labs(x="Year", y=expression(paste("Temperature (", degree ~ F, ")")),
title="Temperatures in Chicago",
subtitle = "daily temperature in late 20 century",
caption="Data source: NMMAPS"
)
g + geom_point(color="firebrick") +
labs(x="Year", y=expression(paste("Temperature (", degree ~ F, ")")),
title="Temperatures in Chicago",
subtitle = "daily temperature in late 20 century",
caption="Data source: NMMAPS"
) +
theme(plot.title = element_text(size=30,face="bold"))
g + geom_point(color="firebrick") +
labs(x="Year", y=expression(paste("Temperature (", degree ~ F, ")")),
title="Temperatures in Chicago",
subtitle = "daily temperature in late 20 century",
caption="Data source: NMMAPS"
) +
theme(plot.title = element_text(size=30,face="bold",hjust=0.5))
head(chic)
ggplot(chic, aes(x=date,y=temp, color = factor(year))) + geom_point()+
labs(x="Year",y = "Temp")
chic$year <- factor(chic$year)
ggplot(chic, aes(x=date,y=temp, color = year)) + geom_point()+
labs(x="Year",y = "Temp")
ggplot(chic, aes(x=date,y=temp, color = year)) + geom_point()+
labs(x="Year",y = "Temp") +theme(legend.position = "none")
ggplot(chic, aes(x=date,y=temp, color = year)) + geom_point()+
labs(x="Year",y = "Temp") +theme(legend.position = "right")
ggplot(chic, aes(x=date,y=temp, color = year)) + geom_point()+
labs(x="Year",y = "Temp") +theme(legend.position = "top")
ggplot(chic, aes(x=date,y=temp, color = year)) + geom_point()+
labs(x="Year",y = "Temp") +theme(legend.title = element_blank())
#### in general, you can direclty set the legend by labs
ggplot(chic, aes(x=date,y=temp, color = year)) + geom_point()+
labs(x="Year",y = "Temp",color="My Year:")
ggplot(chic, aes(x=date,y=temp, color = factor(dow))) + geom_point()+
labs(x="Year",y = "Temp", color="Day of Week") +
theme(legend.title=element_text(color="chocolate",size=12, face="bold"))
season <- rep("Winter",nrow(chic))
season[chic$month <= 9] <-"Fall"
season[chic$month <= 6] <-"Summer"
season[chic$month <= 3] <-"Spring"
chic$season <- season
head(chic)
tail(chic)
ggplot(chic, aes(x=date,y=temp,color= factor(season))) + geom_point() +
labs(x="Year", y=expression(paste("Temperature (", degree ~ F, ")")), color="Season")+
theme(legend.title=element_text(color="chocolate",size=12, face="bold"))
ggplot(chic, aes(x=date,y=temp,color= factor(season))) + geom_point() +
labs(x="Year", y=expression(paste("Temperature (", degree ~ F, ")")), color="Season")+
theme(legend.title=element_text(color="chocolate",size=12, face="bold")) +
scale_color_discrete(labels=c("Jul-Sep","Jan-Mar","Apr-Jun", "Oct-Dec"))
season <- rep(4,nrow(chic))
season[chic$month <= 9] <-3
season[chic$month <= 6] <-2
season[chic$month <= 3] <-1
chic$season <- season
ggplot(chic, aes(x=date,y=temp,color= factor(season))) + geom_point() +
labs(x="Year", y=expression(paste("Temperature (", degree ~ F, ")")), color="Season")+
theme(legend.title=element_text(color="chocolate",size=12, face="bold"))
ggplot(chic, aes(x=date,y=temp,color= factor(season))) + geom_point() +
labs(x="Year", y=expression(paste("Temperature (", degree ~ F, ")")), color="Period")+
theme(legend.title=element_text(color="chocolate",size=12, face="bold")) +
scale_color_discrete(labels=c("Jan-Mar","Apr-Jun","Jul-Sep","Oct-Dec"))
ggplot(chic, aes(x=date,y=temp,color= factor(season))) + geom_point() +
labs(x="Year", y=expression(paste("Temperature (", degree ~ F, ")")), color="Period")+
theme(legend.title=element_text(color="chocolate",size=12, face="bold")) +
scale_color_discrete("Whatever legend title",labels=c("Jan-Mar","Apr-Jun","Jul-Sep","Oct-Dec")) +
theme(legend.title = element_text(color="chocolate", size=10,face="bold"
))
#### the labs setup is overwritten
#### check the geom_line
ggplot(chic, aes(x=date, y=o3)) + geom_point()
ggplot(chic, aes(x=date, y=o3)) + geom_line(color="grey") + labs(x="Year",y="Ozone")
ggplot(chic, aes(x=date, y=o3)) + geom_line(color="grey") + labs(x="Year",y="Ozone")  + geom_point(color="darkorange2")
ggplot(chic[1:20,], aes(x=date, y=o3)) + geom_line(color="grey") + labs(x="Year",y="Ozone")  + geom_point(color="darkorange2")
ggplot(chic[1:20,], aes(x=date, y=o3)) + geom_step(color="grey") + labs(x="Year",y="Ozone")  + geom_point(color="darkorange2")
ggplot(chic[1:20,], aes(x=date, y=o3)) + geom_line(color="grey") + labs(x="Year",y="Ozone")  + geom_point(color="darkorange2")
ggplot(chic, aes(x=date, y=o3)) +
geom_line(color="grey") +
geom_point(color="darkorange2") +
labs(x="Year",y="Ozone")
ggplot(chic, aes(x=date, y=o3)) +
geom_line(aes(color="grey")) +
geom_point(aes(color="darkorange2")) +
labs(x="Year",y="Ozone")
#### color in aes() is not specifying the colors in plot. It tells R that you want to map the color information to a factor
#### with the provided value as one level.
ggplot(chic, aes(x=date, y=o3)) +
geom_line(aes(color="line")) +
geom_point(aes(color="point")) +
labs(x="Year",y="Ozone")
ggplot(chic, aes(x=date, y=o3)) +
geom_line(aes(color="line")) +
geom_point(aes(color="point")) +
labs(x="Year",y="Ozone") +
scale_color_discrete("Type:")
ggplot(chic, aes(x=date, y=o3)) +
geom_line(color="grey") +
geom_point(color="darkorange2") +
labs(x="Year",y="Ozone") +
scale_color_discrete("Type:")
ggplot(chic, aes(x=date, y=o3)) +
geom_line(aes(color="line")) +
geom_point(aes(color="point")) +
labs(x="Year",y="Ozone") +
scale_color_discrete("Type:")
ggplot(chic, aes(x=date, y=o3)) +
geom_line(aes(color="Apple")) +
geom_point(aes(color="Orange")) +
labs(x="Year",y="Ozone") +
scale_color_discrete("Fruit:")
### can we control the color we are using for points and lines?
ggplot(chic, aes(x=date, y=o3)) +
geom_line(aes(color="line")) +
geom_point(aes(color="point")) +
labs(x="Year",y="Ozone") +
scale_color_discrete("Type:")
ggplot(chic, aes(x=date, y=o3)) +
geom_line(color="gray",aes(color="line")) +
geom_point(color="darkorange2",aes(color="point")) +
labs(x="Year",y="Ozone") +
scale_color_discrete("Type:")
### is not working -- the color specification overwrites the mapping to the factor
### use scale_color_manual instead of scale_color_discrete
ggplot(chic, aes(x=date, y=o3)) +
geom_line(aes(color="line")) +
geom_point(aes(color="point")) +
labs(x="Year",y="Ozone") +
scale_color_manual("Type:", guide="legend", values=c("point"="darkorange2","line" = "grey"))
ggplot(chic, aes(x=date, y=o3)) +
geom_line(aes(color="line")) +
geom_point(aes(color="point")) +
labs(x="Year",y="Ozone") +
scale_color_manual("Type:", guide="legend", values=c("point"="darkorange2","line" = "grey"))+
guides(color=guide_legend(override.aes = list(linetype=c(1,NA),shape=c(NA,16))))
ggplot(chic, aes(x=date, y=o3)) +
geom_line(aes(color="line")) +
geom_point(aes(color="point")) +
labs(x="Year",y="Ozone") +
scale_color_manual("Type:", guide="legend", values=c("point"="darkorange2","line" = "grey"))+
guides(color=guide_legend(override.aes = list(linetype=c(3,NA),shape=c(NA,5))))
plot(chic$date[1:100],chic$o3[1:100],type="p",col="orange",pch=16)
lines(chic$date[1:100],chic$o3[1:100],col="gray")
legend("topleft",c("line","point"),pch=c(NA,16),col=c("grey","orange"),lty=c(1,NA))
setwd("../Homework/HW2/NASA/Files/")
ele <- read.table("../Files/elevation.dat",header=TRUE)
colnames(ele)
rownames(ele)
elemat <- as.matrix(ele)
n <- nrow(elemat)
image(t(elemat[n:1,]))
hist(as.numeric(elemat))
image(log(t(elemat[n:1,])+1))
Lon <- colnames(ele)
Lon <- unlist(lapply(Lon,function(x)gsub("X.","",x)))
names(ele) <- Lon
ele.Lon <- as.numeric(Lon)
ele.Lat <- as.numeric(rownames(ele))
metric.Lon <- scan("../Files/Lon.txt",what="",sep="\t")
metric.Lon <- unlist(lapply(metric.Lon,function(x) gsub("W","",x)))
metric.Lon <- as.numeric(metric.Lon)
metric.Lat <- scan("../Files/Lat.txt",what="",sep="\n")
metric.Lat <- unlist(lapply(metric.Lat,function(x){
x <- gsub("N","",x)
x <- gsub("S","",x)
})                            )
metric.Lat <- as.numeric(metric.Lat)
metric.Lat[16:24] <- -metric.Lat[16:24]
ele.Lon
metric.Lon
ele.Lat
metric.Lat
####### use the elevation data set to find approximate elevation for the 24 x 24 grid
## (approximation is needed because the positions of the measurements are not the same as the elevation data )
approx.elevation <- matrix(0,24,24)
### use closet location for approximation
for(i in 1:24){
lat <- metric.Lat[i]
dist.seq.lat <- abs(ele.Lat-lat)
lat.index <- which.min(dist.seq.lat)
for(j in 1:24){
lon <- metric.Lon[j]
dist.seq.lon <- abs(ele.Lon-lon)
lon.index <- which.min(dist.seq.lon)
approx.elevation[i,j] <- ele[lat.index,lon.index]
}
}
image(log(approx.elevation+1))
image(t(log(approx.elevation+1)[24:1,]))
?image
image(t(log(approx.elevation+1)[24:1,]),col = terrain.colors(100))
?chicagoNMMAPS
image(t(log(approx.elevation+1)[24:1,]),col = terrain.colors(100),xaxt="n")
image(t(log(approx.elevation+1)[24:1,]),col = terrain.colors(100),xaxt="n",yaxt="n")
image(t(log(approx.elevation+1)[24:1,]))
image(log(approx.elevation+1))
image(t(log(approx.elevation+1)[24:1,]))
image(t(log(approx.elevation+1)[24:1,]),col = terrain.colors(100))
image(t(log(approx.elevation+1)[24:1,]),col = terrain.colors(100),xaxt="n",yaxt="n")
image(t(log(approx.elevation+1)[24:1,]),col = terrain.colors(100))
points(x=c(0.5,0.6),y=c(0.6,0.5),pch=16,col="red")
lines(x=c(0.5,0.6),y=c(0.6,0.5),lwd=2,col="blue")
points(x=x.seq,y=y.seq,pch=1,col="red")
x.seq <- runif(10)
y.seq <- runif(10)
points(x=x.seq,y=y.seq,pch=1,col="red")
x.seq <- 1:10
x.seq <- 1:100
plot(x.seq,y.seq)
x.seq <- 1:100
y.seq <- sin(x.seq)
plot(x.seq,y.seq)
x.scaled <- x.seq/101
y.scaled <- (y.seq+1)/2
plot(x.scaled,y.scaled)
x.scaled <- x.seq/101*(1/23)
y.scaled <- (y.seq+1)/2*(1/23)
plot(x.scaled,y.scaled)
image(t(log(approx.elevation+1)[24:1,]),col = terrain.colors(100))
x.seq <- 1:100
y.seq <- sin(x.seq)
plot(x.seq,y.seq)
y.scaled <- (y.seq)/2*(1/23)
summary(y.scaled)
x.scaled <- (x.seq-50)/101*(2/23)
plot(x.scaled,y.scaled)
plot(x.seq,y.seq,type="b")
plot(x.scaled,y.scaled,"b")
image(t(log(approx.elevation+1)[24:1,]),col = terrain.colors(100))
points(x.scaled,y.scaled,type="b",pch=20)
summary(x.scaled)
x.scaled <- (x.seq-50)/101*(1/23)
y.scaled <- (y.seq)/2*(1/23)
x.seq <- 1:100
y.seq <- sin(x.seq)
plot(x.seq,y.seq,type="b")
x.scaled <- (x.seq-50)/101*(2/23)
y.scaled <- (y.seq)/2*(1/23)
plot(x.scaled,y.scaled,"b")
image(t(log(approx.elevation+1)[24:1,]),col = terrain.colors(100))
points(x.scaled,y.scaled,type="b",pch=20)
x.scaled <- (x.seq-50)/101*(1/23)
image(t(log(approx.elevation+1)[24:1,]),col = terrain.colors(100))
points(x.scaled,y.scaled,type="b",pch=20)
image(t(log(approx.elevation+1)[24:1,]),col = terrain.colors(100))
points(x.scaled,y.scaled,type="b",pch=20,lwd=0.3,cex=0.3)
image(t(log(approx.elevation+1)[24:1,]),col = terrain.colors(100))
points(x.scaled,y.scaled,type="b",pch=20,lwd=0.6,cex=0.3)
x.new.scaled <- x.scaled + 3/23
image(t(log(approx.elevation+1)[24:1,]),col = terrain.colors(100))
points(x.new.scaled,y.scaled,type="b",pch=20,lwd=0.6,cex=0.3)
y.new.scaled <- y.scaled + 23/23
points(x.new.scaled,y.new.scaled,pch=20,lwd=0.6,cex=0.3)
x.seq <- 1:100
y.seq <- sin(x.seq)
plot(x.seq,y.seq,type="b")
g <- ggplot(chic, aes(x=date, y=o3))  +
geom_point(color="darkorange2")
g +facet_wrap(~year,nrow=2)
g +facet_grid(year~season)
head(chic)
levels(chic$season) <- c("Jan-Mar","Apr-Jun","Jul-Sep","Oct-Dec")
#### Use facet_grid to create panels across two variables
g +facet_grid(year~season)
g <- ggplot(chic, aes(x=date, y=o3))  +
geom_point(color="darkorange2")
g <- ggplot(chic, aes(x=date, y=o3))  +
geom_point(color="darkorange2")
g +facet_grid(year~season)
levels(chic$season)
class(chic$season)
chic$season <- factor(chic$season)
g <- ggplot(chic, aes(x=date, y=o3))  +
geom_point(color="darkorange2")
g +facet_grid(year~season)
levels(chic$season)
levels(chic$season) <- c("Jan-Mar","Apr-Jun","Jul-Sep","Oct-Dec")
g <- ggplot(chic, aes(x=date, y=o3))  +
geom_point(color="darkorange2")
g +facet_grid(year~season)
ggplot(chic, aes(x=date, y=o3))
ggplot(chic, aes(x=date, y=o3)) + geom_point()
g <- ggplot(chic, aes(x=date, y=o3,color=season)) + geom_point()
g
g +theme(legend.tilde=element_blank())
g +theme(legend.title=element_blank())
g + scale_color_manuel(values=c("dodgerblue4","darkolivergree4","darkorchid3","goldenrod1"))
g + scale_color_manual(values=c("dodgerblue4","darkolivergree4","darkorchid3","goldenrod1"))
g + scale_color_manual(values=c("dodgerblue4","darkolivergreen4","darkorchid3","goldenrod1"))
g + scale_color_manual(values=c("dodgerblue4","darkolivegreen4","darkorchid3","goldenrod1"))
library(RColorBrewer)
cols = brewer.pal(8,"Dark2")
g + scale_color_manual(values=cols[1:4])
g + scale_color_brewer(palette="Set1")
g + scale_color_brewer(palette="Dark2")
summary(chic)
ggplot(data=chic,aes(x=date,y=temp,color=o3)) + geom_point() + labs(x="Year",y="Temp")
